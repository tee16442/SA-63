// Code generated by entc, DO NOT EDIT.

package problem

const (
	// Label holds the string label denoting the problem type in the database.
	Label = "problem"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPROBLEMDETAIL holds the string denoting the problemdetail field in the database.
	FieldPROBLEMDETAIL = "problemdetail"

	// EdgeProblemtype holds the string denoting the problemtype edge name in mutations.
	EdgeProblemtype = "Problemtype"
	// EdgeRoom holds the string denoting the room edge name in mutations.
	EdgeRoom = "Room"
	// EdgeCustomer holds the string denoting the customer edge name in mutations.
	EdgeCustomer = "Customer"

	// Table holds the table name of the problem in the database.
	Table = "problems"
	// ProblemtypeTable is the table the holds the Problemtype relation/edge.
	ProblemtypeTable = "problems"
	// ProblemtypeInverseTable is the table name for the Problemtype entity.
	// It exists in this package in order to avoid circular dependency with the "problemtype" package.
	ProblemtypeInverseTable = "problemtypes"
	// ProblemtypeColumn is the table column denoting the Problemtype relation/edge.
	ProblemtypeColumn = "problemtype_problem"
	// RoomTable is the table the holds the Room relation/edge.
	RoomTable = "problems"
	// RoomInverseTable is the table name for the Room entity.
	// It exists in this package in order to avoid circular dependency with the "room" package.
	RoomInverseTable = "rooms"
	// RoomColumn is the table column denoting the Room relation/edge.
	RoomColumn = "room_problem"
	// CustomerTable is the table the holds the Customer relation/edge.
	CustomerTable = "problems"
	// CustomerInverseTable is the table name for the Customer entity.
	// It exists in this package in order to avoid circular dependency with the "customer" package.
	CustomerInverseTable = "customers"
	// CustomerColumn is the table column denoting the Customer relation/edge.
	CustomerColumn = "customer_problem"
)

// Columns holds all SQL columns for problem fields.
var Columns = []string{
	FieldID,
	FieldPROBLEMDETAIL,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Problem type.
var ForeignKeys = []string{
	"customer_problem",
	"problemtype_problem",
	"room_problem",
}
