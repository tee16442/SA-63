// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:        "customers",
		Columns:     CustomersColumns,
		PrimaryKey:  []*schema.Column{CustomersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ProblemsColumns holds the columns for the "problems" table.
	ProblemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "problemdetail", Type: field.TypeString},
		{Name: "customer_problem", Type: field.TypeInt, Nullable: true},
		{Name: "problemtype_problem", Type: field.TypeInt, Nullable: true},
		{Name: "room_problem", Type: field.TypeInt, Nullable: true},
	}
	// ProblemsTable holds the schema information for the "problems" table.
	ProblemsTable = &schema.Table{
		Name:       "problems",
		Columns:    ProblemsColumns,
		PrimaryKey: []*schema.Column{ProblemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "problems_customers_Problem",
				Columns: []*schema.Column{ProblemsColumns[2]},

				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "problems_problemtypes_Problem",
				Columns: []*schema.Column{ProblemsColumns[3]},

				RefColumns: []*schema.Column{ProblemtypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "problems_rooms_Problem",
				Columns: []*schema.Column{ProblemsColumns[4]},

				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProblemtypesColumns holds the columns for the "problemtypes" table.
	ProblemtypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "problemtype", Type: field.TypeString},
	}
	// ProblemtypesTable holds the schema information for the "problemtypes" table.
	ProblemtypesTable = &schema.Table{
		Name:        "problemtypes",
		Columns:     ProblemtypesColumns,
		PrimaryKey:  []*schema.Column{ProblemtypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomsColumns holds the columns for the "rooms" table.
	RoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "roomnumber", Type: field.TypeInt},
	}
	// RoomsTable holds the schema information for the "rooms" table.
	RoomsTable = &schema.Table{
		Name:        "rooms",
		Columns:     RoomsColumns,
		PrimaryKey:  []*schema.Column{RoomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CustomersTable,
		ProblemsTable,
		ProblemtypesTable,
		RoomsTable,
	}
)

func init() {
	ProblemsTable.ForeignKeys[0].RefTable = CustomersTable
	ProblemsTable.ForeignKeys[1].RefTable = ProblemtypesTable
	ProblemsTable.ForeignKeys[2].RefTable = RoomsTable
}
