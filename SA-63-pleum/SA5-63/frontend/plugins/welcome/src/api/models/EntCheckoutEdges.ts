/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntBooks,
    EntBooksFromJSON,
    EntBooksFromJSONTyped,
    EntBooksToJSON,
    EntCustomer,
    EntCustomerFromJSON,
    EntCustomerFromJSONTyped,
    EntCustomerToJSON,
    EntEmployee,
    EntEmployeeFromJSON,
    EntEmployeeFromJSONTyped,
    EntEmployeeToJSON,
    EntRoom,
    EntRoomFromJSON,
    EntRoomFromJSONTyped,
    EntRoomToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntCheckoutEdges
 */
export interface EntCheckoutEdges {
    /**
     * 
     * @type {EntBooks}
     * @memberof EntCheckoutEdges
     */
    books?: EntBooks;
    /**
     * 
     * @type {EntCustomer}
     * @memberof EntCheckoutEdges
     */
    customer?: EntCustomer;
    /**
     * 
     * @type {EntEmployee}
     * @memberof EntCheckoutEdges
     */
    employee?: EntEmployee;
    /**
     * 
     * @type {EntRoom}
     * @memberof EntCheckoutEdges
     */
    room?: EntRoom;
}

export function EntCheckoutEdgesFromJSON(json: any): EntCheckoutEdges {
    return EntCheckoutEdgesFromJSONTyped(json, false);
}

export function EntCheckoutEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntCheckoutEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'books': !exists(json, 'books') ? undefined : EntBooksFromJSON(json['books']),
        'customer': !exists(json, 'customer') ? undefined : EntCustomerFromJSON(json['customer']),
        'employee': !exists(json, 'employee') ? undefined : EntEmployeeFromJSON(json['employee']),
        'room': !exists(json, 'room') ? undefined : EntRoomFromJSON(json['room']),
    };
}

export function EntCheckoutEdgesToJSON(value?: EntCheckoutEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'books': EntBooksToJSON(value.books),
        'customer': EntCustomerToJSON(value.customer),
        'employee': EntEmployeeToJSON(value.employee),
        'room': EntRoomToJSON(value.room),
    };
}


