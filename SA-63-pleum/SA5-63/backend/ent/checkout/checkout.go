// Code generated by entc, DO NOT EDIT.

package checkout

const (
	// Label holds the string label denoting the checkout type in the database.
	Label = "checkout"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCHECKOUTDATE holds the string denoting the checkoutdate field in the database.
	FieldCHECKOUTDATE = "checkoutdate"

	// EdgeBooks holds the string denoting the books edge name in mutations.
	EdgeBooks = "books"
	// EdgeCustomer holds the string denoting the customer edge name in mutations.
	EdgeCustomer = "customer"
	// EdgeEmployee holds the string denoting the employee edge name in mutations.
	EdgeEmployee = "employee"
	// EdgeRoom holds the string denoting the room edge name in mutations.
	EdgeRoom = "room"

	// Table holds the table name of the checkout in the database.
	Table = "checkouts"
	// BooksTable is the table the holds the books relation/edge.
	BooksTable = "checkouts"
	// BooksInverseTable is the table name for the Books entity.
	// It exists in this package in order to avoid circular dependency with the "books" package.
	BooksInverseTable = "books"
	// BooksColumn is the table column denoting the books relation/edge.
	BooksColumn = "books_checkout1"
	// CustomerTable is the table the holds the customer relation/edge.
	CustomerTable = "checkouts"
	// CustomerInverseTable is the table name for the Customer entity.
	// It exists in this package in order to avoid circular dependency with the "customer" package.
	CustomerInverseTable = "customers"
	// CustomerColumn is the table column denoting the customer relation/edge.
	CustomerColumn = "customer_checkout2"
	// EmployeeTable is the table the holds the employee relation/edge.
	EmployeeTable = "checkouts"
	// EmployeeInverseTable is the table name for the Employee entity.
	// It exists in this package in order to avoid circular dependency with the "employee" package.
	EmployeeInverseTable = "employees"
	// EmployeeColumn is the table column denoting the employee relation/edge.
	EmployeeColumn = "employee_checkout3"
	// RoomTable is the table the holds the room relation/edge.
	RoomTable = "checkouts"
	// RoomInverseTable is the table name for the Room entity.
	// It exists in this package in order to avoid circular dependency with the "room" package.
	RoomInverseTable = "rooms"
	// RoomColumn is the table column denoting the room relation/edge.
	RoomColumn = "room_checkout4"
)

// Columns holds all SQL columns for checkout fields.
var Columns = []string{
	FieldID,
	FieldCHECKOUTDATE,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Checkout type.
var ForeignKeys = []string{
	"books_checkout1",
	"customer_checkout2",
	"employee_checkout3",
	"room_checkout4",
}
