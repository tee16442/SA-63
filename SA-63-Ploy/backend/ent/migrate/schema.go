// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// AdultsColumns holds the columns for the "adults" table.
	AdultsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "amount", Type: field.TypeInt, Unique: true},
	}
	// AdultsTable holds the schema information for the "adults" table.
	AdultsTable = &schema.Table{
		Name:        "adults",
		Columns:     AdultsColumns,
		PrimaryKey:  []*schema.Column{AdultsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// BooksColumns holds the columns for the "books" table.
	BooksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "checkin", Type: field.TypeTime},
		{Name: "checkout", Type: field.TypeTime},
		{Name: "adult_books", Type: field.TypeInt, Nullable: true},
		{Name: "customer_books", Type: field.TypeInt, Nullable: true},
		{Name: "kid_books", Type: field.TypeInt, Nullable: true},
		{Name: "room_books", Type: field.TypeInt, Nullable: true},
		{Name: "roomamount_books", Type: field.TypeInt, Nullable: true},
	}
	// BooksTable holds the schema information for the "books" table.
	BooksTable = &schema.Table{
		Name:       "books",
		Columns:    BooksColumns,
		PrimaryKey: []*schema.Column{BooksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "books_adults_books",
				Columns: []*schema.Column{BooksColumns[3]},

				RefColumns: []*schema.Column{AdultsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "books_customers_books",
				Columns: []*schema.Column{BooksColumns[4]},

				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "books_kids_books",
				Columns: []*schema.Column{BooksColumns[5]},

				RefColumns: []*schema.Column{KidsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "books_rooms_books",
				Columns: []*schema.Column{BooksColumns[6]},

				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "books_roomamounts_books",
				Columns: []*schema.Column{BooksColumns[7]},

				RefColumns: []*schema.Column{RoomamountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "username", Type: field.TypeString, Unique: true},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:        "customers",
		Columns:     CustomersColumns,
		PrimaryKey:  []*schema.Column{CustomersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// KidsColumns holds the columns for the "kids" table.
	KidsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "amount", Type: field.TypeInt, Unique: true},
	}
	// KidsTable holds the schema information for the "kids" table.
	KidsTable = &schema.Table{
		Name:        "kids",
		Columns:     KidsColumns,
		PrimaryKey:  []*schema.Column{KidsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomsColumns holds the columns for the "rooms" table.
	RoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "roomtype", Type: field.TypeString, Unique: true},
	}
	// RoomsTable holds the schema information for the "rooms" table.
	RoomsTable = &schema.Table{
		Name:        "rooms",
		Columns:     RoomsColumns,
		PrimaryKey:  []*schema.Column{RoomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomamountsColumns holds the columns for the "roomamounts" table.
	RoomamountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "amount", Type: field.TypeInt, Unique: true},
	}
	// RoomamountsTable holds the schema information for the "roomamounts" table.
	RoomamountsTable = &schema.Table{
		Name:        "roomamounts",
		Columns:     RoomamountsColumns,
		PrimaryKey:  []*schema.Column{RoomamountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdultsTable,
		BooksTable,
		CustomersTable,
		KidsTable,
		RoomsTable,
		RoomamountsTable,
	}
)

func init() {
	BooksTable.ForeignKeys[0].RefTable = AdultsTable
	BooksTable.ForeignKeys[1].RefTable = CustomersTable
	BooksTable.ForeignKeys[2].RefTable = KidsTable
	BooksTable.ForeignKeys[3].RefTable = RoomsTable
	BooksTable.ForeignKeys[4].RefTable = RoomamountsTable
}
