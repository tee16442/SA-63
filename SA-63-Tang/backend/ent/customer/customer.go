// Code generated by entc, DO NOT EDIT.

package customer

const (
	// Label holds the string label denoting the customer type in the database.
	Label = "customer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNAME holds the string denoting the name field in the database.
	FieldNAME = "name"
	// FieldAGE holds the string denoting the age field in the database.
	FieldAGE = "age"
	// FieldEMAIL holds the string denoting the email field in the database.
	FieldEMAIL = "email"
	// FieldUSERNAME holds the string denoting the username field in the database.
	FieldUSERNAME = "username"
	// FieldPASSWORD holds the string denoting the password field in the database.
	FieldPASSWORD = "password"

	// EdgeGender holds the string denoting the gender edge name in mutations.
	EdgeGender = "gender"
	// EdgeCustomertype holds the string denoting the customertype edge name in mutations.
	EdgeCustomertype = "customertype"
	// EdgeTitle holds the string denoting the title edge name in mutations.
	EdgeTitle = "title"

	// Table holds the table name of the customer in the database.
	Table = "customers"
	// GenderTable is the table the holds the gender relation/edge.
	GenderTable = "customers"
	// GenderInverseTable is the table name for the Gender entity.
	// It exists in this package in order to avoid circular dependency with the "gender" package.
	GenderInverseTable = "genders"
	// GenderColumn is the table column denoting the gender relation/edge.
	GenderColumn = "gender"
	// CustomertypeTable is the table the holds the customertype relation/edge.
	CustomertypeTable = "customers"
	// CustomertypeInverseTable is the table name for the Customertype entity.
	// It exists in this package in order to avoid circular dependency with the "customertype" package.
	CustomertypeInverseTable = "customertypes"
	// CustomertypeColumn is the table column denoting the customertype relation/edge.
	CustomertypeColumn = "customertype"
	// TitleTable is the table the holds the title relation/edge.
	TitleTable = "customers"
	// TitleInverseTable is the table name for the Title entity.
	// It exists in this package in order to avoid circular dependency with the "title" package.
	TitleInverseTable = "titles"
	// TitleColumn is the table column denoting the title relation/edge.
	TitleColumn = "title"
)

// Columns holds all SQL columns for customer fields.
var Columns = []string{
	FieldID,
	FieldNAME,
	FieldAGE,
	FieldEMAIL,
	FieldUSERNAME,
	FieldPASSWORD,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Customer type.
var ForeignKeys = []string{
	"customertype",
	"gender",
	"title",
}

var (
	// EMAILValidator is a validator for the "EMAIL" field. It is called by the builders before save.
	EMAILValidator func(string) error
	// USERNAMEValidator is a validator for the "USERNAME" field. It is called by the builders before save.
	USERNAMEValidator func(string) error
	// PASSWORDValidator is a validator for the "PASSWORD" field. It is called by the builders before save.
	PASSWORDValidator func(string) error
)
