// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/ADMIN/app/ent/customer"
	"github.com/ADMIN/app/ent/customertype"
	"github.com/ADMIN/app/ent/gender"
	"github.com/ADMIN/app/ent/schema"
	"github.com/ADMIN/app/ent/title"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	customerFields := schema.Customer{}.Fields()
	_ = customerFields
	// customerDescEMAIL is the schema descriptor for EMAIL field.
	customerDescEMAIL := customerFields[2].Descriptor()
	// customer.EMAILValidator is a validator for the "EMAIL" field. It is called by the builders before save.
	customer.EMAILValidator = customerDescEMAIL.Validators[0].(func(string) error)
	// customerDescUSERNAME is the schema descriptor for USERNAME field.
	customerDescUSERNAME := customerFields[3].Descriptor()
	// customer.USERNAMEValidator is a validator for the "USERNAME" field. It is called by the builders before save.
	customer.USERNAMEValidator = customerDescUSERNAME.Validators[0].(func(string) error)
	// customerDescPASSWORD is the schema descriptor for PASSWORD field.
	customerDescPASSWORD := customerFields[4].Descriptor()
	// customer.PASSWORDValidator is a validator for the "PASSWORD" field. It is called by the builders before save.
	customer.PASSWORDValidator = customerDescPASSWORD.Validators[0].(func(string) error)
	customertypeFields := schema.Customertype{}.Fields()
	_ = customertypeFields
	// customertypeDescCUSTOMERTYPE is the schema descriptor for CUSTOMERTYPE field.
	customertypeDescCUSTOMERTYPE := customertypeFields[0].Descriptor()
	// customertype.CUSTOMERTYPEValidator is a validator for the "CUSTOMERTYPE" field. It is called by the builders before save.
	customertype.CUSTOMERTYPEValidator = customertypeDescCUSTOMERTYPE.Validators[0].(func(string) error)
	genderFields := schema.Gender{}.Fields()
	_ = genderFields
	// genderDescGENDER is the schema descriptor for GENDER field.
	genderDescGENDER := genderFields[0].Descriptor()
	// gender.GENDERValidator is a validator for the "GENDER" field. It is called by the builders before save.
	gender.GENDERValidator = genderDescGENDER.Validators[0].(func(string) error)
	titleFields := schema.Title{}.Fields()
	_ = titleFields
	// titleDescTITLETYPE is the schema descriptor for TITLETYPE field.
	titleDescTITLETYPE := titleFields[0].Descriptor()
	// title.TITLETYPEValidator is a validator for the "TITLETYPE" field. It is called by the builders before save.
	title.TITLETYPEValidator = titleDescTITLETYPE.Validators[0].(func(string) error)
}
